// i의 초기값을 0으로 설정하고 i가 arr의 길이보다 작으면 다음을 반복합니다.

// 만약 stk이 빈 배열이라면 arr[i]를 stk에 추가하고 i에 1을 더합니다.
// stk에 원소가 있고, stk의 마지막 원소가 arr[i]와 같으면 stk의 마지막 원소를 stk에서 제거하고 i에 1을 더합니다.
// stk에 원소가 있는데 stk의 마지막 원소가 arr[i]와 다르면 stk의 맨 마지막에 arr[i]를 추가하고 i에 1을 더합니다.
// 위 작업을 마친 후 만들어진 stk을 return 하는 solution 함수를 완성해 주세요.


// 위의 조건에 따라 코드를 작성했다.
// stk 배열에 arr[i]를 추가하는 경우와, stk의 마지막 원소를 제거하는 경우 두 가지로 분류했다.
function solution(arr) {
    let stk = [];

    for (let i = 0; i < arr.length; i++) {
        // 따라서 stk 배열에 arr[i]를 추가하는 경우인,
        // stk가 빈 배열인 경우 또는
        // stk의 마지막 원소가 arr[i]와 다른 경우에는
        if (stk.length === 0 || stk[stk.length - 1] !== arr[i]) {
            // stk 배열에 arr[i]를 push 해준다.
            stk.push(arr[i]);
        // 그렇지 않는 경우인, tk에 원소가 있고, stk의 마지막 원소가 arr[i]와 같은 경우에는
        } else {
            // stk의 마지막 원소를 stk에서 제거한다.
            stk.pop();
        }
    }

    // 마지막으로 stk.length를 확인하여 빈 배열이 아니라면 stk를 return하고,
    // 빈 배열이라면 [-1]을 return 한다.
    return stk.length > 0 ? stk : [-1];
}


// 다른사람의 풀이
function solution(arr) {
    let stack = [arr[0]];
    for (let i = 1; i < arr.length;i++) {
        stack[stack.length - 1] === arr[i] ? stack.pop() : stack.push(arr[i]);
    }
    return stack.length ? stack : [-1];
}