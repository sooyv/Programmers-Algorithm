function solution(arr, queries) {
    var answer = arr;
    // queries 배열을 순회하면서 s, e, k를 가져옴
    for (let i = 0; i < queries.length; i++) {
        let s = queries[i][0];
        let e = queries[i][1];
        let k = queries[i][2];
        // console.log(s, e, k)
        
        // s부터 e까지 반복하면서, 현재 인덱스 j가 k로 나누어 떨어지는지 확인
        for (let j = s; j <= e; j++) {
            // 나누어 떨어진다면 1을 더함
            if (j % k == 0) {
                answer[j] += 1;
            } else {
                answer[j] = answer[j];
            }
        }     
    }
    return answer;
}



// 다른 사람의 풀이
function solution(arr, queries) {
    // queries 배열의 각 요소를 s, e, k 변수로 가져옴
    for (let [s, e, k] of queries) {
        // s부터 e까지 반복하면서, 현재 인덱스 i가 k로 나누어 떨어지는지 확인
        for (let i = s; i <= e; i++) {
            // 나누어 떨어진다면 1을 더함
            if (i % k === 0) {
                arr[i]++;
            }
        }
    }
    return arr;
}

// for of문을 사용하여 더 간단히 풀 수 있었음